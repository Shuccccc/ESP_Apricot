// Fill out your copyright notice in the Description page of Project Settings.


#include "DtRootViewport.h"
#include "Blueprint/WidgetTree.h"
#include "UILayerBase.h"
#include "Components/CanvasPanel.h"

bool UDtRootViewport::Initialize()
{
	auto bResult = Super::Initialize();

	if(HasAnyFlags(RF_ClassDefaultObject))
	{
		return bResult;
	}
	
	M_RootViewport = WidgetTree->ConstructWidget<UCanvasPanel>(UCanvasPanel::StaticClass(), FName(TEXT("M_RootViewport")));

	WidgetTree->RootWidget = M_RootViewport;
	
	TArray<FName> LayerNames = {
		FName(TEXT("StaticLayer")),
		FName(TEXT("WindowLayer")),
		FName(TEXT("NotificationLayer")),
		FName(TEXT("PopupLayer")),
		FName(TEXT("ProgressLayer")),
		FName(TEXT("SystemLayer")),
		FName(TEXT("TopLayer"))
	};
	
	TArray<UUILayerBase*> Layers;
	for (const FName& LayerName : LayerNames)
	{
		UUILayerBase* Layer = CreateWidget<UUILayerBase>(this, UUILayerBase::StaticClass(), LayerName);
		M_RootViewport->AddChildToCanvas(Layer);
		Layer->SetAnchorPoint();
		Layers.Add(Layer);
	}
	
	if (Layers.Num() >= 7)
	{
		M_StaticLayer = Layers[0];
		M_WindowLayer = Layers[1];
		M_NotificationLayer = Layers[2];
		M_PopupLayer = Layers[3];
		M_ProgressLayer = Layers[4];
		M_SystemLayer = Layers[5];
		M_TopLayer = Layers[6];
	}
	
	return bResult;
}

